@import "@/styles/functions/convert-px2rem";
@import "@/styles/mixins/typography";
@import "@/styles/mixins/breakpoints";
@import "@/styles/mixins/mixins";

.block {
	display: flex;
	flex-direction: column;
	gap: convert-px2rem(4);

	&.horizontal {
		flex-direction: row;
		flex-wrap: wrap;
		gap: convert-px2rem(10);
	}
}

.label {
	position: relative;
	display: flex;
	gap: convert-px2rem(10);
	text-align: left;
	cursor: pointer;
	width: fit-content;

	@include hover-wrapper {
		.input {
			border-color: var(--color-radio-border-hover);
		}
	}

	&.disabled {
		cursor: not-allowed;
	}
}

.input {
	flex-shrink: 0;
	appearance: none;
	background: var(--bg-radio);
	border: 1px solid var(--color-radio-border);
	height: convert-px2rem(20);
	width: convert-px2rem(20);
	border-radius: 50%;
	vertical-align: text-bottom;
	position: relative;
	cursor: pointer;
	transition: border-color var(--transition-duration);

	&.error {
		border-color: var(--color-alert) !important;
	}

	&:focus-visible {
		border-color: var(--color-radio-border-focused);
	}

	&:disabled {
		background-color: var(--bg-radio-disabled) !important;
		border-color: var(--color-radio-border) !important;
		cursor: not-allowed !important;
	}

	&::before {
		content: "";
		position: absolute;
		margin: auto;
		left: 0;
		right: 0;
		bottom: 0;
		overflow: hidden;
		top: 0;
	}

	&:checked {
		border-color: var(--color-radio-border-focused);
	}

	&:checked::before {
		border-radius: 0;
		background-color: var(--color-radio-point);
		border-radius: 50%;
		margin: convert-px2rem(3) convert-px2rem(3);
	}
}

.text {
	@include additional-text;
}
